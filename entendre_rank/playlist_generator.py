import argparse
import pandas as pd
import spotipy
from spotipy.oauth2 import SpotifyOAuth
from .config import SPOTIFY_CLIENT_ID, SPOTIFY_CLIENT_SECRET, SPOTIFY_REDIRECT_URI

def sp_client():
    scope = "playlist-modify-public playlist-modify-private"
    return spotipy.Spotify(auth_manager=SpotifyOAuth(
        client_id=SPOTIFY_CLIENT_ID,
        client_secret=SPOTIFY_CLIENT_SECRET,
        redirect_uri=SPOTIFY_REDIRECT_URI,
        scope=scope
    ))

def create_playlist_from_ranked(ranked_csv: str, name: str, top_n: int=50, public: bool=True):
    sp = sp_client()
    me = sp.me()
    user_id = me["id"]
    ranked = pd.read_csv(ranked_csv).head(top_n)
    track_ids = ranked["spotify_id"].tolist()

    pl = sp.user_playlist_create(user=user_id, name=name, public=public, description="Generated by EntendreRank")
    # chunk adds
    for i in range(0, len(track_ids), 100):
        sp.playlist_add_items(pl["id"], track_ids[i:i+100])
    print(f"Created playlist: {pl['external_urls']['spotify']}")

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument("--ranked", type=str, required=True)
    ap.add_argument("--name", type=str, default="EntendreRank: Top Wordplay")
    ap.add_argument("--top", type=int, default=50)
    ap.add_argument("--private", action="store_true")
    args = ap.parse_args()
    create_playlist_from_ranked(args.ranked, args.name, args.top, public=not args.private)

if __name__ == "__main__":
    main()
